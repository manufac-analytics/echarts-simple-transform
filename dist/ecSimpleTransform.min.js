!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).ecSimpleTransform={})}(this,(function(e){"use strict";function n(e,n){if(!e)throw new Error(n)}function t(e,n){return e.hasOwnProperty(n)}const o={SUM:!0,COUNT:!0,FIRST:!0,AVERAGE:!0,Q1:!0,Q2:!0,Q3:!0,MIN:!0,MAX:!0},i={AVERAGE:["COUNT"]},s={Q1:!0,Q2:!0,Q3:!0},r={MEDIAN:"Q2"};class l{constructor(e,n,t,o,i){this.collectionInfoList=[],this.gatheredValuesByGroup={},this.gatheredValuesNoGroup=[],this.needGatherValues=!1,this._collectionInfoMap={},this.method=t,this.name=o,this.index=e,this.indexInUpstream=n,this.needGatherValues=i}addCollectionInfo(e){this._collectionInfoMap[e.method]=this.collectionInfoList.length,this.collectionInfoList.push(e)}getCollectionInfo(e){return this.collectionInfoList[this._collectionInfoMap[e]]}gatherValue(e,n,t){if(t=+t,e){if(null!=n){const e=n+"";(this.gatheredValuesByGroup[e]||(this.gatheredValuesByGroup[e]=[])).push(t)}}else this.gatheredValuesNoGroup.push(t)}}const u={type:"ecSimpleTransform:aggregate",transform:function(e){const o=e.upstream,r=e.config,u=function(e,t){const o=e.groupBy;let i;null!=o&&(i=t.getDimensionInfo(o),n(i,"Can not find dimension by `groupBy`: "+o));return i}(r,o),{finalResultDimInfoList:p,collectionDimInfoList:g}=function(e,o,r){const u=e.resultDimensions,a=[],f=[];let d=0;for(let e=0;e<u.length;e++){const h=u[e],m=o.getDimensionInfo(h.from);n(m,"Can not find dimension by `from`: "+h.from);const p=h.method;n(r.index!==m.index||null==p,`Dimension ${m.name} is the "groupBy" dimension, must not have any "method".`);const I=c(p);n(I,"method is required");const g=null!=h.name?h.name:m.name,V=new l(a.length,m.index,I,g,t(s,I));a.push(V);let x=!1;if(t(i,I)){x=!0;const e=i[I];for(let n=0;n<e.length;n++)V.addCollectionInfo({method:e[n],indexInLine:d++})}t(s,I)&&(x=!0),x&&f.push(V)}return{collectionDimInfoList:f,finalResultDimInfoList:a}}(r,o,u);let V;g.length&&(V=a(u,o,g,f,d));for(let e=0;e<g.length;e++){const n=g[e];n.__collectionResult=V,I(n.gatheredValuesNoGroup);const o=n.gatheredValuesByGroup;for(const e in o)t(o,e)&&I(o[e])}const x=a(u,o,p,h,m),U=[];for(let e=0;e<p.length;e++)U.push(p[e].name);return{dimensions:U,data:x.outList}}};function a(e,n,o,i,s){const r=[];let l;if(e){l={};for(let u=0,a=n.count();u<a;u++){const a=n.retrieveValue(u,e.index);if(null==a)continue;const c=a+"";if(t(l,c)){s(n,u,l[c],o,e,a)}else{const t=i(n,u,o,e,a);r.push(t),l[c]=t}}}else{const e=i(n,0,o);r.push(e);for(let t=1,i=n.count();t<i;t++)s(n,t,e,o)}return{mapByGroup:l,outList:r}}function c(e){if(null==e)return"FIRST";let i=e.toUpperCase();return i=t(r,i)?r[i]:i,n(t(o,i),`Illegal method ${e}.`),i}const f=(e,n,t,o,i)=>{const s=[];for(let r=0;r<t.length;r++){const l=t[r],u=l.collectionInfoList;for(let t=0;t<u.length;t++){const r=u[t];s[r.indexInLine]=+g[r.method](e,n,l,o,i)}if(l.needGatherValues){const t=e.retrieveValue(n,l.indexInUpstream);l.gatherValue(o,i,t)}}return s},d=(e,n,t,o,i,s)=>{for(let r=0;r<o.length;r++){const l=o[r],u=l.collectionInfoList;for(let o=0;o<u.length;o++){const r=u[o],a=r.indexInLine;t[a]=+V[r.method](t[a],e,n,l,i,s)}if(l.needGatherValues){const t=e.retrieveValue(n,l.indexInUpstream);l.gatherValue(i,s,t)}}},h=(e,n,t,o,i)=>{const s=[];for(let r=0;r<t.length;r++){const l=t[r],u=l.method;s[r]=p(o,l)?i:g[u](e,n,l,o,i)}return s},m=(e,n,t,o,i,s)=>{for(let r=0;r<o.length;r++){const l=o[r];if(p(i,l))continue;const u=l.method;t[r]=V[u](t[r],e,n,l,i,s)}};function p(e,n){return e&&n.indexInUpstream===e.index}function I(e){e.sort(((e,n)=>e-n))}const g={SUM:(e,n,t)=>e.retrieveValue(n,t.indexInUpstream),COUNT:()=>1,FIRST:(e,n,t)=>e.retrieveValue(n,t.indexInUpstream),MIN:(e,n,t)=>e.retrieveValue(n,t.indexInUpstream),MAX:(e,n,t)=>e.retrieveValue(n,t.indexInUpstream),AVERAGE(e,n,t,o,i){const s=o?t.__collectionResult.mapByGroup[i+""]:t.__collectionResult.outList[0];return e.retrieveValue(n,t.indexInUpstream)/s[t.getCollectionInfo("COUNT").indexInLine]},Q1:(e,n,t,o,i)=>x(.25,t,o,i),Q2:(e,n,t,o,i)=>x(.5,t,o,i),Q3:(e,n,t,o,i)=>x(.75,t,o,i)},V={SUM:(e,n,t,o)=>e+n.retrieveValue(t,o.indexInUpstream),COUNT:e=>e+1,FIRST:e=>e,MIN:(e,n,t,o)=>Math.min(e,n.retrieveValue(t,o.indexInUpstream)),MAX:(e,n,t,o)=>Math.max(e,n.retrieveValue(t,o.indexInUpstream)),AVERAGE(e,n,t,o,i,s){const r=i?o.__collectionResult.mapByGroup[s+""]:o.__collectionResult.outList[0];return e+n.retrieveValue(t,o.indexInUpstream)/r[o.getCollectionInfo("COUNT").indexInLine]},Q1:(e,n,t,o)=>e,Q2:(e,n,t,o)=>e,Q3:(e,n,t,o)=>e};function x(e,n,t,o){return function(e,n){const t=(e.length-1)*n+1,o=Math.floor(t),i=+e[o-1],s=t-o;return s?i+s*(e[o]-i):i}(t?n.gatheredValuesByGroup[o+""]:n.gatheredValuesNoGroup,e)}e.aggregate=u,e.id={type:"ecSimpleTransform:id",transform:function(e){const n=e.upstream,t=e.config,o=t.dimensionIndex,i=t.dimensionName,s=n.cloneAllDimensionInfo();s[o]=i;const r=n.cloneRawData();for(let e=0,n=r.length;e<n;e++){r[e][o]=e}return{dimensions:s,data:r}}},Object.defineProperty(e,"__esModule",{value:!0})}));
